---
import i18next from '../i18n.js';
const { lang } = Astro.props;
i18next.changeLanguage(lang || 'de');

let currentFlagIcon = '/german.webp';

if (lang === 'en') {
  currentFlagIcon = '/english.webp';
} else if (lang === 'es') {
  currentFlagIcon = '/spanish.webp';
}
---

<!-- Button menu for mobile and small screens -->
<div class="fixed z-20 top-6 left-6 flex items-center sm:flex md:hidden">
  <button
    id="menu-toggle"
    class="flex items-center justify-center w-12 h-12 rounded-full bg-primary bg-opacity-90 border-2 border-accent shadow-lg transition duration-300"
    aria-label="Open menu"
  >
    <i class="fas fa-bars text-white text-2xl"></i>
  </button>
</div>

<div id="mobile-menu" class="fixed top-0 left-0 w-full h-full bg-primary bg-opacity-90 z-30 transform -translate-x-full transition-transform duration-300">
  <div class="flex flex-col items-center justify-center h-full space-y-6">
    <!-- Sections -->
    <a href="/{lang}/#aboutMe" class="text-white text-xl" id="menu-aboutMe">{i18next.t('aboutMe')}</a>
    <a href="/{lang}/#skills" class="text-white text-xl" id="menu-skills">{i18next.t('skills')}</a>
    <a href="/{lang}/#education" class="text-white text-xl" id="menu-education">{i18next.t('education')}</a>
    <a href="/{lang}/#projects" class="text-white text-xl" id="menu-projects">{i18next.t('projects')}</a>
    <a href="/{lang}/#contact" class="text-white text-xl" id="menu-contact">{i18next.t('contact')}</a>

    <!-- Change language -->
    <div class="flex space-x-4 mt-8">
      <a href="/de/" class="text-white">Deutsch</a>
      <a href="/en/" class="text-white">English</a>
      <a href="/es/" class="text-white">Español</a>
    </div>

    <!-- Button to close the menu -->
    <button id="menu-close" class="absolute top-6 right-6 text-white text-3xl">&times;</button>
  </div>
</div>

<!-- Button to go to the top of the website -->
<div class="fixed z-40 top-6 left-20 hidden md:flex flex-col items-center button-slide-down">
  <a href="#top">
    <button
      id="back-to-top"
      class="flex items-center justify-center w-12 h-12 rounded-full bg-primary bg-opacity-90 border-2 border-accent shadow-lg transition duration-300"
    >
      <img src="/logo.svg" alt="Back to Top" class="w-10 h-10" />
    </button>
  </a>
</div>

<!-- Responsive navbar -->
<nav
  class="fixed z-40 top-6 left-1/2 transform -translate-x-1/2 bg-primary bg-opacity-90 border border-accent shadow-lg rounded-full items-center justify-around w-full md:w-3/4 lg:w-[50%] max-w-xl h-12 hidden md:flex navbar-slide-down"
>
  <div class="relative w-full flex items-center justify-between h-full">
    <!-- Led on the top -->
    <div
      id="led-bar"
      class="absolute top-0 left-0 h-1 w-20 bg-secondary rounded-full shadow-lg transition-all duration-300 ease-in-out transform"
      style="box-shadow: 0 0 5px #9D3BE4, 0 0 10px #9D3BE4, 0 0 15px #9D3BE4;"
    ></div>

    <!-- Position indicator -->
    <div
      id="active-indicator"
      class="absolute top-1/2 left-0 h-8 bg-accent rounded-lg transition-all duration-300 ease-in-out transform -translate-y-1/2"
    ></div>

    <!-- Navigation sections -->
    <a
      href="#aboutMe"
      class="relative z-10 px-4 py-0 ml-2 rounded-full text-white font-medium h-full flex items-center text-sm md:text-base"
      data-i18n="aboutMe"
    >
      {i18next.t('aboutMe')}
    </a>
    <a
      href="#skills"
      class="relative z-10 px-4 py-0 rounded-full text-white font-medium h-full flex items-center text-sm md:text-base"
      data-i18n="skills"
    >
      {i18next.t('skills')}
    </a>
    <a
      href="#education"
      class="relative z-10 px-4 py-0 rounded-full text-white font-medium h-full flex items-center text-sm md:text-base"
      data-i18n="education"
    >
      {i18next.t('education')}
    </a>
    <a
      href="#projects"
      class="relative z-10 px-4 py-0 rounded-full text-white font-medium h-full flex items-center text-sm md:text-base"
      data-i18n="projects"
    >
      {i18next.t('projects')}
    </a>
    <a
      href="#contact"
      class="relative z-10 px-4 py-0 mr-2 rounded-full text-white font-medium h-full flex items-center text-sm md:text-base"
      data-i18n="contact"
    >
      {i18next.t('contact')}
    </a>
  </div>
</nav>

<!-- Button to change the language with dropdown menu -->
<div class="fixed z-50 top-6 right-20 hidden md:flex flex-col items-center button-slide-down">
  <!-- Button with the current flag -->
  <div class="relative flex items-center justify-center rounded-full border-2 bg-primary bg-opacity-90 border-accent p-1 h-12 w-12">
    <button id="language-toggle" class="flex items-center justify-center w-12 h-12 rounded-full transition duration-300">
      <img id="current-flag-icon" src={currentFlagIcon} alt="Cambiar idioma" class="w-10 h-10 rounded-full object-cover" />
    </button>
  </div>

  <!-- Dropdown menu with languages -->
  <div id="language-dropdown" class="absolute top-14 right-0 bg-primary bg-opacity-90 border border-accent rounded-lg shadow-lg hidden">
    <ul class="flex flex-col items-center p-2 space-y-2">
      <li>
        <button onclick="changeLanguage('de')" class="flex items-center justify-center w-10 h-10 rounded-full">
          <img src="/german.webp" alt="Deutsch" class="w-8 h-8 rounded-full object-cover" />
        </button>
      </li>
      <li>
        <button onclick="changeLanguage('en')" class="flex items-center justify-center w-10 h-10 rounded-full">
          <img src="/english.webp" alt="English" class="w-8 h-8 rounded-full object-cover" />
        </button>
      </li>
      <li>
        <button onclick="changeLanguage('es')" class="flex items-center justify-center w-10 h-10 rounded-full">
          <img src="/spanish.webp" alt="Español" class="w-8 h-8 rounded-full object-cover" />
        </button>
      </li>
    </ul>
  </div>  
</div>

<script>
  import i18next from '../i18n.js';

  // Declarar globalmente el método changeLanguage en el objeto window
  declare global {
    interface Window {
      changeLanguage: (lang: string) => void;
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const menuToggle = document.getElementById('menu-toggle');
    const menuClose = document.getElementById('menu-close');
    const mobileMenu = document.getElementById('mobile-menu');
    const languageDropdown = document.getElementById('language-dropdown');
    const currentFlagIcon = document.getElementById('current-flag-icon') as HTMLImageElement; // Conversión explícita

    // Open the menu when click the hamburger button (in mobile)
    menuToggle.addEventListener('click', () => {
      mobileMenu.classList.remove('-translate-x-full');
    });

    // Close the menu when click the hamburger button (in mobile)
    menuClose.addEventListener('click', () => {
      mobileMenu.classList.add('-translate-x-full');
    });

    // Close the menu when click in a section to navigate (in mobile)
    document.querySelectorAll('#mobile-menu a').forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('-translate-x-full');
      });
    });

    // Toggle menu for languages
    const languageToggle = document.getElementById('language-toggle');
    if (languageToggle) {
      languageToggle.addEventListener('click', () => {
        languageDropdown.classList.toggle('hidden');
      });
    }

    // Function to handle language change
    window.changeLanguage = (lang) => {
      // Update the URL without reloading the page
      const url = new URL(window.location.href);
      url.searchParams.set('lang', lang);
      window.history.replaceState({}, '', window.location.pathname);

      // Change the language in i18next
      i18next.changeLanguage(lang);

      // Update dynamic content
      document.querySelectorAll('[data-i18n]').forEach(el => {
        const key = el.getAttribute('data-i18n');
        el.innerHTML = i18next.t(key);
      });

      // Update the flag icon
      const flagMap = {
        de: '/german.webp',
        en: '/english.webp',
        es: '/spanish.webp',
      };
      currentFlagIcon.src = flagMap[lang];

      // Close the dropdown menu
      languageDropdown.classList.add('hidden');
    };

    // Initialize language based on URL or default
    const urlParams = new URLSearchParams(window.location.search);
    const currentLang = urlParams.get('lang') || 'de';
    i18next.changeLanguage(currentLang);

    // Set initial flag icon
    const initialFlagMap = {
      de: '/german.webp',
      en: '/english.webp',
      es: '/spanish.webp',
    };
    currentFlagIcon.src = initialFlagMap[currentLang];
  });
</script>

<style>
@keyframes slide-down {
  0% {
    transform: translate(-50%, -180%);
    opacity: 0;
  }
  100% {
    transform: translate(-50%, 0);
    opacity: 1;
  }
}

.navbar-slide-down {
  animation: slide-down 1s ease-out forwards;
}

.button-slide-down {
  animation: slide-down 1s ease-out forwards;
}
</style>